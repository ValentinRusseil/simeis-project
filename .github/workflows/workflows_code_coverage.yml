name: CI code coverage

# Trigger
on:
    pull_request:
        branches: ["*"]
        types: [opened, synchronize]

# JOBS
jobs:
    code-coverage:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4
            - uses: actions-rust-lang/setup-rust-toolchain@v1
              with: 
                toolchain: 1.85.0
            - uses: actions/cache@v4
              id: cache
              with:
                path: |
                  ~/.cargo/bin/
                  ~/.cargo/registry/index/
                  ~/.cargo/registry/cache/
                  ~/.cargo/git/db/
                  target/
                key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
                restore-keys: |
                  ${{ runner.os }}-cargo-
            - name: Install Dependecies
              if: steps.cache.outputs.cache-hit != 'true'
              run: make setup-install
            - name: Run code coverage
              run: |
                set +e
                make code-coverage
                coverage_exit_code=$?
                echo $coverage_exit_code > code-coverage-status.txt
                exit 0
            - name: Upload Code Coverage Status
              uses: actions/upload-artifact@v4
              if: always()
              with:
                name: coverage-status
                path: code-coverage-status.txt
    failure-code-coverage:
        permissions:
            contents: write
            issues: write
            pull-requests: write
        runs-on: ubuntu-latest
        if: always()
        needs: [code-coverage]
        steps:
            - uses: actions/checkout@v4
            - name: Download coverage status
              uses: actions/download-artifact@v4
              continue-on-error: true
              with:
                name: coverage-status
            - name: Check coverage status
              run: |
                if [ -f code-coverage-status.txt ]; then
                  exit_code=$(cat code-coverage-status.txt)
                  if [ "$exit_code" != "0" ]; then
                    echo "Coverage check failed, will label PR"
                    echo "fail" > should_label.txt
                  else
                    echo "Coverage OK"
                  fi
                else
                  echo "No coverage status file found, assuming success"
                fi
            - if: ${{ hashFiles('should_label.txt') != '' }}
              uses: actions-ecosystem/action-add-labels@v1
              with:
                github_token: ${{ secrets.GITHUB_TOKEN }}
                labels: not enough test