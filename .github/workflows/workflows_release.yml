name: CI release

permissions:
  contents: read
  pull-requests: write

# Trigger
on:
  pull_request_target:
    types: [opened, synchronize]

# JOBS
jobs:
  # is-releasable:  
  #   if: startsWith(github.event.pull_request.base.ref, 'release/') && (startsWith(github.event.pull_request.head.ref , 'main') || startsWith(github.event.pull_request.head.ref, 'bug/'))
  #   runs-on: ubuntu-latest
  #   steps:
  #       - uses: actions/checkout@v4
  #       - uses: actions-rust-lang/setup-rust-toolchain@v1
  #         with: 
  #           toolchain: 1.85.0
  #       - uses: actions/cache@v4
  #         id: cache
  #         with:
  #           path: |
  #             ~/.cargo/bin/
  #             ~/.cargo/registry/index/
  #             ~/.cargo/registry/cache/
  #             ~/.cargo/git/db/
  #             target/
  #           key: ${{ runner.os }}--cargo-${{ hashFiles('**/Cargo.lock') }}
  #           restore-keys: |
  #             ${{ runner.os }}--cargo-
  #       - name: Install Dependecies
  #         if: steps.cache.outputs.cache-hit != 'true'
  #         run: make setup-install
  #       - uses: actions/setup-python@v3
  #         with:
  #           python-version: '3.12'
  #       - run: make release
  #       - run: make build-manual
  #       - run: make test
  #       - run: make check-code
  #       - run: chmod +x .github/workflows/start_simeis_server.sh
  #       - run: .github/workflows/start_simeis_server.sh &
  #       - run: sleep 120
  #       - run: cd tests && python3 ./test_robot.py test-rich

  create-release:
    if: startsWith(github.event.pull_request.base.ref, 'release/') && (startsWith(github.event.pull_request.head.ref , 'main') || startsWith(github.event.pull_request.head.ref, 'bug/'))
    runs-on: ubuntu-latest
    steps:
      - name: Aquire code
        if: always()
        uses: actions/checkout@v4
      - name: Put commit hash/name in env variables
        run: |
          echo "GIT_HASH=$(git rev-parse --short=8 HEAD)" >> $GITHUB_ENV
          echo "GIT_MESSAGE<<EOF" >> $GITHUB_ENV
          git log -1 --pretty=%B >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV
      - name: Release the new binaries
        uses: mini-bomba/create-github-release@v1.2.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          tag: "latest"
          prerelease: true
          name: "Latest Commit, that compiles"
          body: |
            This automatic prerelease is built from commit ${{ github.env.GIT_HASH }} and was triggered by @${{ github.actor }}
            [Github Actions workflow run that built this prerelease](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})

            Commit message:
            ${{ github.env.GIT_MESSAGE }}
          files: |
            build/*.exe
          clear_attachments: true

  is-not-releasable:
    if: startsWith(github.event.pull_request.base.ref, 'release/') && !startsWith(github.event.pull_request.head.ref, 'main') && !startsWith(github.event.pull_request.head.ref, 'bug/')
    runs-on: ubuntu-latest
    steps:
      - uses: superbrothers/close-pull-request@v3
        with:
          comment: |
            This PR cannot be merged into a release/* branch because it is not based on the main branch or a bug/* branch.
            Only main or bug/* branches are allowed to merge into release/* branches.